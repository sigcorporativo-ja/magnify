{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/magnify.html","webpack:///./src/impl/ol/js/ZoomInteraction.js","webpack:///./src/impl/ol/js/magnifycontrol.js","webpack:///./src/facade/js/magnifycontrol.js","webpack:///./src/facade/js/magnify.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ZoomInteraction","options","elt","document","createElement","className","positioning","element","stopEvent","_elt","layers","map","layer","getImpl","getOL3Layer","filter","mgmap_","ol","Map","controls","Collection","interactions","target","view","View","projection","mgview_","getView","set","zoom","on","setView_","Overlay","this","getMap","getViewport","removeEventListener","onMouseMove_","_listener","Observable","unByKey","setMap","addEventListener","active","e","px","getEventCoordinate","setPosition","setCenter","querySelector","style","display","updateSize","setRotation","getRotation","z","Math","max","getZoom","Number","setZoom","MagnifyControl","M","impl","Control","html","olMap","getMapImpl","zoomInteraction_","getProjection","code","addOverlay","setActive","setOptionZoom","values","utils","isUndefined","MagnifyImplControl","exception","pluginOnLeft","arrayListNames","zoomMax","Promise","success","fail","evt","buttonOpened","classList","add","vars","template","compileSync","getElementsByClassName","length","usableLayers","getLayers","includes","layerBase","getBaseLayers","effectSelected","remove","removeEffects","control","Magnify","map_","controls_","collapsible","position","split","metadata_","api","metadata","Plugin","control_","push","panel_","ui","Panel","collapsedButtonClass","tooltip","addControls","SHOW","getWFS","getKML","getGeoJSON","collapse","dialog","info","addPanels","removeControls","aControl","window","plugin","M$plugin$Magnify","M$control$MagnifyControl","M$impl$control$ZoomInteraction","M$impl$control$MagnifyControl"],"mappings":"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","file":"magnify.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div class=\\\"m-magnify-container\\\">\\r\\n    <div id=\\\"m-magnify-titulo\\\" class=\\\"title\\\">LUPA</div>\\r\\n    <div class=\\\"m-magnify-panel\\\">\\r\\n        <div class=\\\"m-magnify-effect-buttoms\\\">\\r\\n            <button id=\\\"m-magnify-magnifying\\\" class=\\\"g-cartografia-zoom-extension big-buttom\\\" title=\\\"Activa lupa\\\"></button>\\r\\n        </div>\\r\\n        <div class=\\\"m-magnify-zoom-offset\\\">\\r\\n            <p>Nivel de zoom: </p>\\r\\n            <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"{{zoomMax}}\\\" step=\\\"0.5\\\" class=\\\"m-magnify-zoom-offset-input\\\" id=\\\"input-zoom-offset\\\"></input>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","/**\n * @module M/impl/control/ZoomInteraction\n */\nexport default class ZoomInteraction extends ol.Overlay {\n  /**\n   * @classdesc\n   * The ZoomInteraction add a 'magnifying glass' effect to an OL3 map that displays\n   * a portion of the map in a different zoom (and actually display different content).\n   *\n   * @constructor\n   * @extends {ol.Overlay}\n   * @param {olx.OverlayOptions} options Overlay options\n   * @api stable\n   */\n  constructor(options) {\n    const elt = document.createElement('div');\n    elt.className = 'ol-magnify';\n    super({\n      positioning: options.positioning || 'center-center',\n      element: elt,\n      stopEvent: false,\n    });\n    this._elt = elt;\n\n    const layers = options.layers.map(layer => layer.getImpl().getOL3Layer())\n      .filter(layer => layer != null);\n\n    // Create magnify map\n    this.mgmap_ = new ol.Map({\n      controls: new ol.Collection(),\n      interactions: new ol.Collection(),\n      target: this._elt,\n      view: new ol.View({ projection: options.projection }),\n      layers,\n    });\n    this.mgview_ = this.mgmap_.getView();\n\n    this.set('zoomOffset', options.zoom + 1);\n    this.set('active', true);\n    this.on('propertychange', this.setView_.bind(this));\n  }\n\n  /**\n   * Set the map instance the overlay is associated with.\n   * @param {ol.Map} map The map instance.\n   */\n  setMap(map) {\n    if (this.getMap()) {\n      this.getMap().getViewport().removeEventListener('mousemove', this.onMouseMove_);\n    }\n    if (this._listener) ol.Observable.unByKey(this._listener);\n    this._listener = null;\n\n    ol.Overlay.prototype.setMap.call(this, map);\n    map.getViewport().addEventListener('mousemove', this.onMouseMove_.bind(this));\n    this._listener = map.getView().on('propertychange', this.setView_.bind(this));\n\n    this.setView_();\n  }\n\n  /** Get the magnifier map\n   * @return {_ol.Map_}\n   */\n  getMagMap() {\n    return this.mgmap_;\n  }\n\n  /** Magnify is active\n   * @return {boolean}\n   */\n  getActive() {\n    return this.get('active');\n  }\n\n  /** Activate or deactivate\n   * @param {boolean} active\n   */\n  setActive(active) {\n    return this.set('active', active);\n  }\n\n  /** Mouse move\n   * @private\n   */\n  onMouseMove_(e) {\n    if (!this.get('active')) {\n      this.setPosition();\n    } else {\n      const px = this.getMap().getEventCoordinate(e);\n      /* eslint-disable */\n      this.setPosition(px);\n      this.mgview_.setCenter(px);\n      if (this._elt.querySelector('canvas').style.display === 'none') this.mgmap_.updateSize();\n      /* eslint-enable */\n    }\n  }\n\n  /** View has changed\n   * @private\n   */\n  setView_(e) {\n    if (!this.get('active')) {\n      this.setPosition();\n      return;\n    }\n\n    if (!e) { // refresh all\n      this.setView_({ key: 'rotation' });\n      this.setView_({ key: 'resolution' });\n      return;\n    }\n\n    // Set the view params\n    switch (e.key) {\n      case 'rotation':\n        this.mgview_.setRotation(this.getMap().getView().getRotation());\n        break;\n        /* eslint-disable */\n      case 'zoomOffset':\n      case 'resolution': {\n        const z = Math.max(0, this.getMap().getView().getZoom() + Number(this.get('zoomOffset')));\n        this.mgview_.setZoom(z);\n        break;\n      }\n      /* eslint-enable */\n      default:\n        break;\n    }\n  }\n\n  setOptionZoom(zoom) {\n    this.set('zoomOffset', zoom + 1);\n  }\n}\n","/* eslint-disable no-console */\r\n/**\r\n * @module M/impl/control/MagnifyControl\r\n */\r\nimport ZoomInteraction from 'impl/ZoomInteraction';\r\n\r\nexport default class MagnifyControl extends M.impl.Control {\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, html) {\r\n    // super addTo - don't delete\r\n    this.map = map;\r\n    this.olMap = map.getMapImpl();\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  effectSelected(layers, zoom) {\r\n\r\n    this.zoomInteraction_ = new ZoomInteraction({\r\n      projection: this.map.getImpl().getProjection().code,\r\n      zoom, // layers son las capas a las que se le hará zoom cuando la lupa pase\r\n      layers: layers,\r\n    });\r\n\r\n    this.olMap.addOverlay(this.zoomInteraction_);\r\n    this.zoomInteraction_.setActive(true);\r\n\r\n  }\r\n\r\n  setOptionZoom(zoom) {\r\n    this.zoomInteraction_.setOptionZoom(zoom);\r\n  }\r\n\r\n  removeEffects() {\r\n    if (this.zoomInteraction_ != null) {\r\n      this.zoomInteraction_.setActive(false);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * @module M/control/MagnifyControl\r\n */\r\n\r\nimport MagnifyImplControl from 'impl/magnifycontrol';\r\nimport template from 'templates/magnify';\r\n\r\nexport default class MagnifyControl extends M.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(values) {\r\n    // 1. checks if the implementation can create PluginControl\r\n    if (M.utils.isUndefined(MagnifyImplControl)) {\r\n      M.exception('La implementación usada no puede crear controles MagnifyControl');\r\n    }\r\n    // 2. implementation of this control\r\n    const impl = new MagnifyImplControl();\r\n    super(impl, 'Magnify');\r\n\r\n    this.pluginOnLeft = values.pluginOnLeft;\r\n    this.arrayListNames = values.layers;\r\n    this.zoom = values.zoom;\r\n    this.zoomMax = values.zoomMax;\r\n  }\r\n\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    this.map = map;\r\n    return new Promise((success, fail) => {\r\n\r\n      // Desplazar open button\r\n      if (this.pluginOnLeft) {\r\n        document.querySelector('.m-panel.m-plugin-magnify').querySelector('.m-panel-btn.g-cartografia-zoom-extension').addEventListener('click', (evt) => {\r\n          let buttonOpened = document.querySelector('.m-panel.m-plugin-magnify.opened');\r\n          if (buttonOpened !== null) {\r\n            buttonOpened = buttonOpened.querySelector('.m-panel-btn.g-cartografia-flecha-izquierda');\r\n          }\r\n          if (buttonOpened && this.pluginOnLeft) {\r\n            buttonOpened.classList.add('opened-left');\r\n          }\r\n        });\r\n      }\r\n\r\n      // Creamos las variables necesarias para el html\r\n      const zoomMax = this.zoomMax;\r\n      const options = {\r\n        vars: { zoomMax },\r\n      };\r\n\r\n      const html = M.template.compileSync(template, options);\r\n\r\n      // Zoom de la lupa\r\n      html.querySelector('#input-zoom-offset').value = this.zoom;\r\n      html.querySelector('#input-zoom-offset').addEventListener('change', (evt) => {\r\n        this.zoom = Number(evt.target.value);\r\n        this.getImpl().setOptionZoom(this.zoom);\r\n      });\r\n\r\n      // Botón efecto lupa\r\n      html.querySelector('#m-magnify-magnifying').addEventListener('click', (evt) => {\r\n\r\n        if (document.getElementsByClassName('buttom-pressed').length == 0) {\r\n          html.querySelector('#m-magnify-magnifying').classList.add('buttom-pressed');\r\n\r\n          // Cojo todas las capas del mapa\r\n          const allLayers = map.getLayers();\r\n          // De cada capas del mapa obtengo su nombre (en los parámetros del plugin, las capas se meten por su nombre)\r\n          const usableLayers = allLayers.filter(l => l.name);\r\n          // Cojo las capas del mapa que coinciden con el nombre de las capas metidas como parámetro en el plugin\r\n          const layers = usableLayers.filter(l => this.arrayListNames.includes(l.name));\r\n\r\n          // Obtengo la capa base\r\n          let layerBase = this.map.getBaseLayers();\r\n\r\n          if (layerBase == 0) { //No hay capa base en el mapa, debe coger todas las capas.\r\n            this.getImpl().effectSelected(usableLayers, this.zoom);\r\n          } else if (layers.length === 0) { //En el plugin no se ha puesto capa en los parámetros o no existe\r\n            this.getImpl().effectSelected(layerBase, this.zoom); //mostrará la capa base\r\n          } else { //se ha puesto capa o capas en los parámetros, debe mostrarlas\r\n            this.getImpl().effectSelected(layers, this.zoom);\r\n          }\r\n        } else {\r\n          html.querySelector('#m-magnify-magnifying').classList.remove('buttom-pressed');\r\n          this.removeEffects();\r\n        }\r\n\r\n      });\r\n      success(html);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function is called to remove the effects\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeEffects() {\r\n    this.getImpl().removeEffects();\r\n  }\r\n\r\n\r\n  /**\r\n   * This function compares controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Control} control to compare\r\n   * @api stable\r\n   */\r\n  equals(control) {\r\n    return control instanceof MagnifyControl;\r\n  }\r\n\r\n}\r\n","/* eslint-disable no-console */\r\n/**\r\n * @module M/plugin/Magnify\r\n */\r\nimport 'assets/css/magnify';\r\nimport MagnifyControl from './magnifycontrol';\r\nimport api from '../../api.json';\r\n\r\nexport default class Magnify extends M.Plugin {\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n\r\n    /**\r\n     * This flag indicates if the plugin is collapsible\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible = true;\r\n\r\n\r\n    /**\r\n     * Class name of the html view Plugin\r\n     * @type {string}\r\n     */\r\n    this.className = 'm-plugin-magnify';\r\n\r\n\r\n    /**\r\n     * Position of the Plugin\r\n     * Posible values: TR | TL | BL | BR\r\n     * @type {Enum}\r\n     */\r\n    const positions = ['TR', 'TL', 'BL', 'BR'];\r\n    this.position = positions.includes(options.position) ? options.position : 'TR';\r\n\r\n\r\n    /**\r\n     * Layer names that will have effects\r\n     * Value: the names separated with coma\r\n     * @type {string}\r\n     */\r\n    /*Al crear el plugin pueden darse tres casos:\r\n      1. que no se haya incluido el parámetro layers.\r\n      2. que el parámetro layers esté vacío (layers: '')\r\n      3. que el parámetro layers contenga una capa o varias separadas por comas */\r\n    if (options.layers == '' || options.layers == null) {\r\n      this.layers = '';\r\n    } else {\r\n      this.layers = options.layers.split(',');\r\n    }\r\n\r\n    /**\r\n     * Max limit zoom\r\n     * Value: number \r\n     * @type {number}\r\n     */\r\n    if (typeof options.zoomMax === 'number') {\r\n      this.zoomMax = options.zoomMax;\r\n    } else this.zoomMax = 10;\r\n\r\n\r\n    /**\r\n     * Magnifying effect zoom\r\n     * Value: number in range 1 - zoomMax\r\n     * @type {number}\r\n     */\r\n    if (typeof options.zoom === 'number') {\r\n      this.zoom = options.zoom;\r\n      if (options.zoom < 1) {\r\n        this.zoom = 1;\r\n      } else if (options.zoom > options.zoomMax) {\r\n        this.zoom = options.zoomMax;\r\n      }\r\n    } else {\r\n      this.zoom = 1; // Default value\r\n    }\r\n\r\n\r\n    /**\r\n     * Metadata from api.json\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.metadata_ = api.metadata;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    const pluginOnLeft = !!(['TL', 'BL'].includes(this.position));\r\n    const values = {\r\n      pluginOnLeft,\r\n      layers: this.layers,\r\n      zoom: this.zoom,\r\n      zoomMax: this.zoomMax,\r\n    };\r\n    this.control_ = new MagnifyControl(values);\r\n    this.controls_.push(this.control_);\r\n\r\n    this.map_ = map;\r\n\r\n    // panel para agregar control - no obligatorio\r\n    this.panel_ = new M.ui.Panel('panelMagnify', {\r\n      collapsible: this.collapsible,\r\n      position: M.ui.position[this.position],\r\n      className: this.className,\r\n      collapsedButtonClass: 'g-cartografia-zoom-extension',\r\n      tooltip: 'Lupa',\r\n    });\r\n    this.panel_.addControls(this.controls_);\r\n    this.panel_.on(M.evt.SHOW, (evt) => {\r\n      if (map.getWFS().length === 0 && map.getKML().length === 0 && map.getGeoJSON() === 0) {\r\n        this.panel_.collapse();\r\n        M.dialog.info('No existen capas disponibles para aplicar el efecto transparencia');\r\n      }\r\n    });\r\n    map.addPanels(this.panel_);\r\n  }\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.control_.removeEffects();\r\n    this.map_.removeControls([this.control_]);\r\n    [this.control_, this.panel_, this.map_] = [null, null, null];\r\n  }\r\n\r\n  /**\r\n   * This function return the control of plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getControls() {\r\n    const aControl = [];\r\n    aControl.push(this.control_);\r\n    return aControl;\r\n  }\r\n\r\n  /**\r\n   * @getter\r\n   * @public\r\n   */\r\n  get name() {\r\n    return 'magnify';\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * This function gets metadata plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getMetadata() {\r\n    return this.metadata_;\r\n  }\r\n}\r\n","import M$plugin$Magnify from '/home/irenevinas/m5/mapea-publico/src/plugins/v5/magnify/src/facade/js/magnify';\nimport M$control$MagnifyControl from '/home/irenevinas/m5/mapea-publico/src/plugins/v5/magnify/src/facade/js/magnifycontrol';\nimport M$impl$control$ZoomInteraction from '/home/irenevinas/m5/mapea-publico/src/plugins/v5/magnify/src/impl/ol/js/ZoomInteraction';\nimport M$impl$control$MagnifyControl from '/home/irenevinas/m5/mapea-publico/src/plugins/v5/magnify/src/impl/ol/js/magnifycontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Magnify = M$plugin$Magnify;\nwindow.M.control.MagnifyControl = M$control$MagnifyControl;\nwindow.M.impl.control.ZoomInteraction = M$impl$control$ZoomInteraction;\nwindow.M.impl.control.MagnifyControl = M$impl$control$MagnifyControl;\n"],"sourceRoot":""}